replicaCount: 2

image:
  repository: ivykiera/devops-helm-repo-app
  tag: "latest"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deployment:
  labels:
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: app
  containerPort: 8080
service:
  port: 80
  targetPort: 8080
  selector:
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: app

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""   # Let helpers generate the name

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

# Environment variables for PostgreSQL connectivity
env:
  DB_HOST: postgres.demo.svc.cluster.local
  DB_PORT: "5432"
  DB_USER: appuser   # Replace with actual username from postgres secret
  DB_PASSWORD: pasima   # Replace with actual password from postgres secret
  DB_NAME: appdb   # Replace with actual database name

# Container listens on 8080 (from Dockerfile)
containerPort: 8080

service:
  type: ClusterIP   # Changed to ClusterIP since Ingress will handle external access
  port: 80
  targetPort: 8080   # Explicitly map to container port

ingress:
  enabled: true
  className: alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/success-codes: "200"
  hosts:
    - host: chart-example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources: {}
#  limits:
#    cpu: 500m
#    memory: 512Mi
#  requests:
#    cpu: 100m
#    memory: 128Mi

# Probes hit port 8080
livenessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 30 # Increase if app startup is slow
  periodSeconds: 20
readinessProbe:
  httpGet:
    path: /
    port: 8080
  initialDelaySeconds: 15 # Increase if app startup is slow
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}
