replicaCount: 2

image:
  repository: ivykiera/devops-helm-repo-app
  tag: "latest"
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deployment:
  labels:
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: app
  containerPort: 8080
service:
  port: 80
  targetPort: 8080
  selector:
    app.kubernetes.io/name: app
    app.kubernetes.io/instance: app

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""   # Let helpers generate the name

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
securityContext: {}

# Environment variables for PostgreSQL connectivity
env:
  DB_HOST: postgres
  DB_PORT: "5432"
  DB_USER: appuser   # Replace with actual username from postgres secret
  DB_PASSWORD: pasima   # Replace with actual password from postgres secret
  DB_NAME: appdb   # Replace with actual database name

# Container listens on 8080 (from Dockerfile)
containerPort: 8080

service:
  type: ClusterIP   # Changed to ClusterIP since Ingress will handle external access
  port: 80
  targetPort: 8080   # Explicitly map to container port

ingress:
  # Ingress is enabled by default and preconfigured for EKS ALB
  enabled: true
  className: alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    # Align health check with app endpoint
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/success-codes: "200"
    # If external-dns is installed, this creates the DNS record automatically
    external-dns.alpha.kubernetes.io/hostname: eks.globalheartassociation.com
  hosts:
    - host: eks.globalheartassociation.com  # <- set this to your domain
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Resources are defined below under "Right-size resources"

# Probes hit port 8080
livenessProbe:
  httpGet:
    path: /healthz
    port: 8080
  initialDelaySeconds: 20
  periodSeconds: 15
readinessProbe:
  httpGet:
    path: /healthz
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 10

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 2
  targetCPUUtilizationPercentage: 20
  # targetMemoryUtilizationPercentage: 80

# Right-size resources so HPA has a baseline
resources:
  requests:
    cpu: 1m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 512Mi

nodeSelector: {}
tolerations: []
affinity: {}
